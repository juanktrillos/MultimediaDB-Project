/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jFrames;

import database.BaseDatos;
import entidades.Contenidos_Multimedia;
import entidades.Imagenes;
import entidades.Sitios_Interes;
import java.awt.event.ContainerListener;
import java.util.LinkedList;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

/**
 *
 * @author CATV
 */
public class Delete extends JPanel {

    Ventana ven;
    LinkedList<Sitios_Interes> sitios;
    LinkedList<Contenidos_Multimedia> contenido;
    LinkedList<Imagenes> imagen;
    String category;

    ImageIcon img;

    Sitios_Interes sitio;

    /**
     * Creates new form PAg
     *
     * @param ven
     */
    public Delete(Ventana ven) {
        initComponents();
        this.ven = ven;
        img = new ImageIcon();
        sitios = new LinkedList<>();
        imagen = new LinkedList<>();
        contenido = new LinkedList<>();
        sitio = new Sitios_Interes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Jlista = new javax.swing.JComboBox<>();
        JAtras = new javax.swing.JButton();
        JDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        JNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        JDireccion = new javax.swing.JTextField();
        JInfo = new javax.swing.JTextField();
        JCalificacion = new javax.swing.JComboBox<>();
        JReseña = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        JHorario = new javax.swing.JTextField();
        JImagen = new javax.swing.JLabel();
        jLugares = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        JID = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        JidImagen = new javax.swing.JLabel();
        JIdContenido = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(662, 374));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Jlista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Centro Comercial", "Hotel", "Restaurante" }));
        Jlista.setSelectedIndex(1);
        Jlista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JlistaActionPerformed(evt);
            }
        });
        add(Jlista, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 209, -1));

        JAtras.setText("Atras");
        JAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JAtrasActionPerformed(evt);
            }
        });
        add(JAtras, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 391, -1, -1));

        JDelete.setText("Eliminar");
        JDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JDeleteActionPerformed(evt);
            }
        });
        add(JDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 330, -1, -1));

        jLabel1.setText("Nombre");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 50, -1, -1));
        add(JNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 223, -1));

        jLabel2.setText("Direccion");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        jLabel3.setText("Calificacion");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, -1, -1));

        jLabel4.setText("Reseña");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, -1, -1));

        jLabel5.setText("Informacion adicional");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 260, -1, -1));
        add(JDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 223, -1));
        add(JInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 223, 66));

        JCalificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        JCalificacion.setSelectedIndex(1);
        add(JCalificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));
        add(JReseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, 223, 66));

        jLabel6.setText("Horario");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, -1, -1));
        add(JHorario, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 140, 223, -1));
        add(JImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 30, 220, 230));

        jLugares.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLugaresActionPerformed(evt);
            }
        });
        add(jLugares, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 80, 200, -1));

        jLabel7.setText("ID");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 10, -1, -1));
        add(JID, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 10, 80, 20));

        jLabel8.setText("ID Imagen");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 260, -1, -1));
        add(JidImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 260, 80, 20));
        add(JIdContenido, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, 80, 20));

        jLabel9.setText("ID Contenido");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 280, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void JDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JDeleteActionPerformed
        // TODO add your handling code here:

        BaseDatos base = new BaseDatos();
        Sitios_Interes lugar;
        Imagenes imagen;
        Contenidos_Multimedia contenido;

        if (base.crearConexion()) {

            //IMAGEN
            int idContenido = new Integer(JIdContenido.getText());
            imagen = new Imagenes(idContenido);
            base.delete(imagen.delete());

            System.out.println("Elimine: IMAGEN " + base.delete(imagen.delete()));
            System.out.println("Elimine: IMAGEN " + imagen.toString());

            //CONTENIDO
            contenido = new Contenidos_Multimedia(idContenido);
            base.delete(contenido.delete());

            System.out.println("Elimine: CONTENIDO " + base.delete(contenido.delete()));
            System.out.println("Elimine: CONTENIDO " + contenido.toString());

            //SITIO
            String Nombre = JNombre.getText();
            String Dir = JDireccion.getText();
            String Horario = JHorario.getText();
            String Reseña = JReseña.getText();
            String Info = JInfo.getText();
            int calificacion = (JCalificacion.getSelectedIndex() + 1);
            int idSitio = new Integer(JID.getText());
            int categoria = (Jlista.getSelectedIndex() + 1);

            lugar = new Sitios_Interes(idSitio, Nombre, Dir, calificacion, Reseña, Horario, Info, categoria);
            base.delete(lugar.delete());

            System.out.println("Elimine: SITIO " + base.delete(lugar.delete()));
            System.out.println("Elimine: SITIO " + lugar.toString());

        }


    }//GEN-LAST:event_JDeleteActionPerformed

    private void JlistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JlistaActionPerformed
        // TODO add your handling code here:

        category = Jlista.getSelectedItem().toString();
        System.out.println(category);
        ObtenerInfo();
        for (Sitios_Interes sitio1 : sitios) {
            jLugares.addItem(sitio1.getNombre());
        }


    }//GEN-LAST:event_JlistaActionPerformed


    private void jLugaresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLugaresActionPerformed
        // TODO add your handling code here:
        int lugar = (jLugares.getSelectedIndex());
        System.out.println("Pulsee  " + lugar);

        JNombre.setText(sitios.get(lugar).getNombre());
        JDireccion.setText(sitios.get(lugar).getDireccion());
        JHorario.setText(sitios.get(lugar).getHorario());
        JReseña.setText(sitios.get(lugar).getReseña());
        JInfo.setText(sitios.get(lugar).getInfoAdicional());
        JID.setText("" + sitios.get(lugar).getIdSitio());

        //Imagen
        JImagen.setIcon(imagen.get(lugar).getImagen());
        JIdContenido.setText("" + contenido.get(lugar).getIdContenido());
        JidImagen.setText("" + imagen.get(lugar).getIdImagen());


    }//GEN-LAST:event_jLugaresActionPerformed

    private void JAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JAtrasActionPerformed
        // TODO add your handling code here:

        MenuAdmin menu = new MenuAdmin(ven);
        ven.setContentPane(menu);
        ven.setSize(640, 480);

    }//GEN-LAST:event_JAtrasActionPerformed

    //<editor-fold defaultstate="collapsed" desc="ObtenerInfo(): Metodo que Busca los Sitios en la DB">
    private void ObtenerInfo() {

        BaseDatos db = new BaseDatos();

        if (db.crearConexion()) {
            //SE BUSCAN LOS SITIOS DE INTERES
            chargeDataSitios(db, 8);

            //SE BUSCAN LOS CONTENIDOS MULTIMEDIA DEL SITIO DE INTERES
            chargeDataContenido(db, 3);
            //SE BUSCAN LAS IMAGENES DE LOS CONTENIDOS MULTIMEDIA
            if (!contenido.isEmpty()) {
                chargeDataImagenes(db, 6);
            }

        }
    }
//</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="chargeDataSitios(BaseDatos, int)">
    public void chargeDataSitios(BaseDatos db, int attri) {
        String sql = "SELECT sitios_interes.* FROM categorias, sitios_interes "
                + "WHERE idCategoria=idCategoriaS and nombreCategoria='" + category + "'";
        LinkedList<Object> list = db.select(sql);
        LinkedList<Object> listValues;

        int size = list.size();
        int cant = size / attri;

        for (int i = 0; i < cant; i++) {
            listValues = new LinkedList<>();
            for (int j = 0; j < attri; j++) {
                if (!list.isEmpty()) {
                    listValues.add(list.removeFirst());
                }
            }
            Sitios_Interes sitioTemp = new Sitios_Interes();
            sitioTemp.read(listValues);
            sitios.add(sitioTemp);
        }
    }
//</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="chargeDataContenido(BaseDatos, int)">
    public void chargeDataContenido(BaseDatos db, int attri) {
        String sql = "SELECT contenidos_multimedia.* FROM categorias, sitios_interes, contenidos_multimedia "
                + "WHERE idCategoria=idCategoriaS and idSitio=idSitiosc and nombreCategoria='" + category + "'";
        LinkedList<Object> list = db.select(sql);
        LinkedList<Object> listValues;

        int size = list.size();
        int cant = size / attri;

        for (int i = 0; i < cant; i++) {
            listValues = new LinkedList<>();
            for (int j = 0; j < attri; j++) {
                if (!list.isEmpty()) {
                    listValues.add(list.removeFirst());
                }
            }
            Contenidos_Multimedia cont = new Contenidos_Multimedia();
            cont.read(listValues);
            contenido.add(cont);
        }
    }
//</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="chargeDataImagenes(BaseDatos, int)">
    public void chargeDataImagenes(BaseDatos db, int attri) {

        LinkedList<Object> list;
        LinkedList<Object> listValues;
        for (Contenidos_Multimedia cont : contenido) {

            Imagenes img = new Imagenes(cont.getIdContenido());
            list = db.select(img.selectFK());

            int size = list.size();
            int cant = size / attri;

            for (int i = 0; i < cant; i++) {
                listValues = new LinkedList<>();
                for (int j = 0; j < attri; j++) {
                    if (!list.isEmpty()) {
                        listValues.add(list.removeFirst());
                    }
                }
                img.read(listValues);
                imagen.add(img);
            }
        }
    }
//</editor-fold>

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JAtras;
    private javax.swing.JComboBox<String> JCalificacion;
    private javax.swing.JButton JDelete;
    private javax.swing.JTextField JDireccion;
    private javax.swing.JTextField JHorario;
    private javax.swing.JLabel JID;
    private javax.swing.JLabel JIdContenido;
    private javax.swing.JLabel JImagen;
    private javax.swing.JTextField JInfo;
    private javax.swing.JTextField JNombre;
    private javax.swing.JTextField JReseña;
    private javax.swing.JLabel JidImagen;
    private javax.swing.JComboBox<String> Jlista;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jLugares;
    // End of variables declaration//GEN-END:variables

    /* private boolean searchCategory(BaseDatos base, String category) {
    
    String sql = "Select * from categorias where nombreCategoria=" + category + "";
    LinkedList<Object> select = base.select(sql);
    
    return !select.isEmpty();
    }*/
}
